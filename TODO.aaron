== This is my custom TODO file ==

* transaction object should contain two package list (install and remove)
  instead of a single list of syncpkgs - this should allow us to get rid of that
  type.  This also requires seperate functionality to return a list of
  "replaces" packages to the front end, so the frontend can handle the QUESTION()
  stuff in that case

* libalpm -> front end communication needs a work-up.  Both progress functions
  can be combined into one callback, IFF we adjust it to accept a prefix string
  for the progress bars, and format it at the lib side.  Question functions
  should also do the same - create the string at the library side, and simply
  call some sort of int yes_no = ask_question("Do foo with bar?");

* move logging (alpm_logaction) out of the library.  log files should be
  written by the app, not the library.  Adding a PM_LOG_* constant that
  frontends can recognize and send to a file is probably a good idea.

* clear up list allocation/deallocation - some lists need to be free'd, some
  do not and there is no clear indication WHEN this should happen.

* remove DB entries (directories) on a read error?

* Add a pm_errstr error string, which will allow us to do things like:
    pm_errno = PM_ERR_LIBARCHIVE;
    pm_errstr = archive_error_string(archive);
  or:
    pm_errno = PM_ERR_LIBDOWNLOAD;
    pm_errstr = downloadLastErrString;
  This way we don't break abstraction when returning specific errors in
  cases like the above.

* pacman: A LOT of functions are way too long.  There should be an upper limit of
  100-200 lines.  _alpm_add_commit is around 600 lines, and is far too complex.

* pacman: fixup doxygen documentation for public interface

* feature for 3.1: package file hooks *
  I've been planning on this one for some time.  Here's a simple rundown:
  in /etc/pacman.d/hooks:
     Hook /usr/include/* : /usr/bin/ctags -R /usr/include/*.h -f /usr/include/systags
  This will allow us to make "global hooks" to simplify a lot of repetitive
  install files (scrollkeeper, depmod, etc).  This also allows us to move
  ldconfig out of pacman entirely.
  possible: /etc/pacman.hooks/* files for hooks, so packages can add them too

* feature for 3.1: multiple search/match types
  option: MatchType regex (current way)
          MatchType fnmatch (use fnmatch to match things like 'pacman -S gnome*')
          MatchType plain (no matching.  expect plain text).

* feature for 3.1: revamp the autotools system.  I'd LOVE to use a manual system
  like wmii and friends do.  It'd be real nice if we could just do away with
  autotools altogether.

**** BUGS ****
* Removal of conflicts on -A and -U (INCOMPLETE)
