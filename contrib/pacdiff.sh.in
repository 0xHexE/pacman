#!/bin/bash
#   pacdiff : a simple pacnew/pacorig/pacsave updater
#
#   Copyright (c) 2007 Aaron Griffin <aaronmgriffin@gmail.com>
#   Copyright (c) 2013 Pacman Development Team <pacman-dev@archlinux.org>
#
#   This program is free software; you can redistribute it and/or modify
#   it under the terms of the GNU General Public License as published by
#   the Free Software Foundation; either version 2 of the License, or
#   (at your option) any later version.
#
#   This program is distributed in the hope that it will be useful,
#   but WITHOUT ANY WARRANTY; without even the implied warranty of
#   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
#   GNU General Public License for more details.
#
#   You should have received a copy of the GNU General Public License
#   along with this program.  If not, see <http://www.gnu.org/licenses/>.
#

declare -r myname='pacdiff'
declare -r myver='@PACKAGE_VERSION@'

diffprog=${DIFFPROG:-vimdiff}
diffsearchpath=${DIFFSEARCHPATH:-/etc}
locate=0
USE_COLOR='y'
declare -a oldsaves

m4_include(../scripts/library/output_format.sh)

m4_include(../scripts/library/term_colors.sh)

usage() {
	cat <<EOF
$myname is a simple pacnew/pacorig/pacsave updater.

Usage: $myname [-l]

Options:
  -l/--locate       scan using locate (default: find)

Enviroment Variables:
  DIFFPROG          override the merge program: (default: vimdiff)
  DIFFSEARCHPATH    override the search path. (only when using find)
                    (default: /etc)

Example: DIFFPROG=meld DIFFSEARCHPATH="/boot /etc /usr" $myname

EOF
}

version() {
	printf "%s %s\n" "$myname" "$myver"
	echo 'Copyright (C) 2007 Aaron Griffin <aaronmgriffin@gmail.com>'
	echo 'Copyright (C) 2013 Pacman Development Team <pacman-dev@archlinux.org>'
}

cmd() {
	if [ $locate -eq 1 ]; then
		locate -0 -e -b \*.pacnew \*.pacorig \*.pacsave '*.pacsave.[0-9]*'
	else
		find $diffsearchpath \( -name \*.pacnew -o -name \*.pacorig -o -name \*.pacsave -o -name '*.pacsave.[0-9]*' \) -print0
	fi
}

while [[ -n "$1" ]]; do	
	case "$1" in
		-l|--locate)
		locate=1;;
		-V|--version)
		version; exit 0;;
		-h|--help)
		usage; exit 0;;
		*)
		usage; exit 1;;
	esac
	shift
done

# see http://mywiki.wooledge.org/BashFAQ/020
while IFS= read -u 3 -r -d '' pacfile; do
	file="${pacfile%.pac*}"
	file_type="pac${pacfile##*.pac}"

	# add matches for pacsave.N to oldsaves array, do not prompt
	if [[ $file_type = pacsave.+([0-9]) ]]; then
		oldsaves+=("$pacfile")
		continue
	fi

	msg "%s file found for %s" "$file_type" "$file"
	if [ ! -f "$file" ]; then
		warning "$file does not exist"
		rm -iv "$pacfile"
		continue
	fi

	if cmp -s "$pacfile" "$file"; then
		msg2 "Files are identical, removing..."
		rm -v "$pacfile"
	else
		ask "(V)iew, (S)kip, (R)emove %s, (O)verwrite with %s, (Q)uit: [v/s/r/o/q] " "$file_type" "$file_type"
		while read c; do
			case $c in
				q|Q) exit 0;;
				r|R) rm -v "$pacfile"; break ;;
				o|O) mv -v "$pacfile" "$file"; break ;;
				v|V)
				$diffprog "$pacfile" "$file"
				rm -iv "$pacfile"; break ;;
				s|S) break ;;
				*) ask "Invalid answer. Try again: [v/s/r/o/q] "; continue ;;
			esac
		done
	fi
done 3< <(cmd)

(( ${#oldsaves[@]} )) && warning "Ignoring %s" "${oldsaves[@]}"

exit 0

# vim: set ts=2 sw=2 noet:
