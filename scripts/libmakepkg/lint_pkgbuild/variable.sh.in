#!/bin/bash
#
#   variable.sh - Check that variables are or are not arrays as appropriate
#
#   Copyright (c) 2014-2015 Pacman Development Team <pacman-dev@archlinux.org>
#
#   This program is free software; you can redistribute it and/or modify
#   it under the terms of the GNU General Public License as published by
#   the Free Software Foundation; either version 2 of the License, or
#   (at your option) any later version.
#
#   This program is distributed in the hope that it will be useful,
#   but WITHOUT ANY WARRANTY; without even the implied warranty of
#   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
#   GNU General Public License for more details.
#
#   You should have received a copy of the GNU General Public License
#   along with this program.  If not, see <http://www.gnu.org/licenses/>.
#

[[ -n "$LIBMAKEPKG_LINT_PKGBUILD_VARIABLE_SH" ]] && return
LIBMAKEPKG_LINT_PKGBUILD_VARIABLE_SH=1

LIBRARY=${LIBRARY:-'@libmakepkgdir@'}

source "$LIBRARY/util/message.sh"


lint_pkgbuild_functions+=('lint_variable')


lint_variable() {
	# TODO: refactor - similar arrays are used elsewhere
	local array=(arch backup checkdepends groups license noextract options
	             validpgpkeys)
	local arch_array=(conflicts depends makedepends md5sums optdepends provides
	                  replaces sha1sums sha256sums sha384sums sha512sums source)
	local string=(changelog epoch install pkgdesc pkgrel pkgver url)

	local i
	for i in ${array[@]}; do
		if grep -w -q -e "$i=[^(]" -e "$i+=[^(]" "$BUILDSCRIPT"; then
			error "$(gettext "%s should be an array")" "$i"
			ret=1
		fi
	done

	for a in ${arch[@]}; do
		[[ $a == "any" ]] && continue

		for i in ${arch_array[@]}; do
			if grep -w -q -e "$i_$a=[^(]" -e "$i_$a+=[^(]" "$BUILDSCRIPT"; then
				error "$(gettext "%s_%s should be an array")" "$i" "$a"
				ret=1
			fi
		done
	done

	for i in ${string[@]}; do
		if grep -w -q -e "$i=(" -e "$i+=(" "$BUILDSCRIPT"; then
			error "$(gettext "%s should not be an array")" "$i"
			ret=1
		fi
	done
}
