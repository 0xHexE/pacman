.TH "Transaction Functions" 3 "16 Oct 2006" "libalpm" \" -*- nroff -*-
.ad l
.nh
.SH NAME
Transaction Functions \- Functions to manipulate libalpm transactions.  

.PP
.SS "Functions"

.in +1c
.ti -1c
.RI "void * \fBalpm_trans_getinfo\fP (unsigned char parm)"
.br
.ti -1c
.RI "int \fBalpm_trans_init\fP (unsigned char type, unsigned int flags, alpm_trans_cb_event event, alpm_trans_cb_conv conv, alpm_trans_cb_progress progress)"
.br
.ti -1c
.RI "int \fBalpm_trans_sysupgrade\fP ()"
.br
.ti -1c
.RI "int \fBalpm_trans_addtarget\fP (char *target)"
.br
.ti -1c
.RI "int \fBalpm_trans_prepare\fP (PMList **data)"
.br
.ti -1c
.RI "int \fBalpm_trans_commit\fP (PMList **data)"
.br
.ti -1c
.RI "int \fBalpm_trans_release\fP ()"
.br
.in -1c
.SH "Detailed Description"
.PP 
Functions to manipulate libalpm transactions. 
.PP
.SH "Function Documentation"
.PP 
.SS "int alpm_trans_addtarget (char * target)"
.PP
Add a target to the transaction. 
.PP
\fBParameters:\fP
.RS 4
\fItarget\fP the name of the target to add 
.RE
.PP
\fBReturns:\fP
.RS 4
0 on success, -1 on error (pm_errno is set accordingly) 
.RE
.PP

.SS "int alpm_trans_commit (PMList ** data)"
.PP
Commit a transaction. 
.PP
\fBParameters:\fP
.RS 4
\fIdata\fP the address of a PM_LIST where detailed description of an error can be dumped (ie. list of conflicting files) 
.RE
.PP
\fBReturns:\fP
.RS 4
0 on success, -1 on error (pm_errno is set accordingly) 
.RE
.PP

.SS "void* alpm_trans_getinfo (unsigned char parm)"
.PP
Get informations about the transaction. 
.PP
\fBParameters:\fP
.RS 4
\fIparm\fP name of the info to get 
.RE
.PP
\fBReturns:\fP
.RS 4
a char* on success (the value), NULL on error 
.RE
.PP

.SS "int alpm_trans_init (unsigned char type, unsigned int flags, alpm_trans_cb_event event, alpm_trans_cb_conv conv, alpm_trans_cb_progress progress)"
.PP
Initialize the transaction. 
.PP
\fBParameters:\fP
.RS 4
\fItype\fP type of the transaction 
.br
\fIflags\fP flags of the transaction (like nodeps, etc) 
.br
\fIevent\fP event callback function pointer 
.br
\fIconv\fP question callback function pointer 
.br
\fIprogress\fP progress callback function pointer 
.RE
.PP
\fBReturns:\fP
.RS 4
0 on success, -1 on error (pm_errno is set accordingly) 
.RE
.PP

.SS "int alpm_trans_prepare (PMList ** data)"
.PP
Prepare a transaction. 
.PP
\fBParameters:\fP
.RS 4
\fIdata\fP the address of a PM_LIST where detailed description of an error can be dumped (ie. list of conflicting files) 
.RE
.PP
\fBReturns:\fP
.RS 4
0 on success, -1 on error (pm_errno is set accordingly) 
.RE
.PP

.SS "int alpm_trans_release ()"
.PP
Release a transaction. 
.PP
\fBReturns:\fP
.RS 4
0 on success, -1 on error (pm_errno is set accordingly) 
.RE
.PP

.SS "int alpm_trans_sysupgrade ()"
.PP
Search for packages to upgrade and add them to the transaction. 
.PP
\fBReturns:\fP
.RS 4
0 on success, -1 on error (pm_errno is set accordingly) 
.RE
.PP

